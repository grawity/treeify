#!/usr/bin/env perl
use File::Spec;

my $tree = {};
my $maxdepth = 0;
my $path;

sub split_path {
	my $path = File::Spec->canonpath(shift);
	$path =~ s!(^|/) [^/]+ / \.\. (/|$)!$1$2!gx;
	$path =~ s!^/!!;
	split m!/!, $path;
}

sub put {
	my $branch = shift;
	my @path = split_path(shift);
	while (@path) {
		my $head = shift @path;
		$branch = ($branch->{$head} //= {});
	}
}

sub walk {
	my $branch = shift;
	my @path = split_path(shift);
	for (@path) {
		$branch = $branch->{$_} // {};
	}
	return $branch;
}

sub tree {
	my $branch = shift // $tree;
	my $depth = shift // 0;
	for my $item (sort keys %$branch) {
		print "    "x$depth, $item, "\n";
		if (!$maxdepth || $depth < $maxdepth) {
			tree($branch->{$item}, $depth+1);
		}
	}
}

for (@ARGV) {
	if (/^-(\d+)$/) {
		$maxdepth = $1;
	} else {
		$path = $_;
	}
}

while (<STDIN>) {
	chomp; put($tree, $_);
}

my $branch = $tree;
if ($path) {
	$branch = walk($branch, $path);
}
tree($branch);
